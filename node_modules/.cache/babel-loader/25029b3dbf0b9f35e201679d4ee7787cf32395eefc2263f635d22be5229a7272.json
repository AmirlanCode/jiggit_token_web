{"ast":null,"code":"var _jsxFileName = \"/Users/narimanaubakirov/Desktop/jigitcoin_web/src/components/AnimatedBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gradientMove = keyframes`\n  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n`;\nconst BackgroundContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: -1;\n  overflow: hidden;\n  pointer-events: none;\n`;\n_c = BackgroundContainer;\nconst GradientOverlay = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background: linear-gradient(120deg, #1a1a40 0%, #2a2a88 50%, #FFD700 100%);\n  opacity: 0.35;\n  background-size: 200% 200%;\n  animation: ${gradientMove} 18s ease-in-out infinite;\n  z-index: 0;\n`;\n_c2 = GradientOverlay;\nconst Canvas = styled.canvas`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: 1;\n`;\n_c3 = Canvas;\nconst AnimatedBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    let particles = [];\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    class Particle {\n      constructor() {\n        this.reset();\n      }\n      reset() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.size = Math.random() * 3 + 1;\n        this.speedX = Math.random() * 1.5 - 0.75;\n        this.speedY = Math.random() * 1.5 - 0.75;\n        this.opacity = Math.random() * 0.5 + 0.2;\n        this.color = `rgba(255, 215, 0, ${this.opacity})`;\n      }\n      update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n        if (this.x > canvas.width || this.x < 0) this.speedX *= -1;\n        if (this.y > canvas.height || this.y < 0) this.speedY *= -1;\n      }\n      draw() {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.shadowColor = 'rgba(255,215,0,0.3)';\n        ctx.shadowBlur = 12;\n        ctx.fillStyle = this.color;\n        ctx.fill();\n        ctx.shadowBlur = 0;\n      }\n    }\n    const init = () => {\n      resizeCanvas();\n      particles = [];\n      for (let i = 0; i < 60; i++) {\n        particles.push(new Particle());\n      }\n    };\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Update and draw particles\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n\n      // Draw connecting lines\n      particles.forEach((particle, index) => {\n        for (let j = index + 1; j < particles.length; j++) {\n          const dx = particle.x - particles[j].x;\n          const dy = particle.y - particles[j].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < 120) {\n            ctx.beginPath();\n            ctx.strokeStyle = `rgba(255, 215, 0, ${0.07 * (1 - distance / 120)})`;\n            ctx.lineWidth = 1;\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(particles[j].x, particles[j].y);\n            ctx.stroke();\n          }\n        }\n      });\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    init();\n    animate();\n    window.addEventListener('resize', init);\n    return () => {\n      window.removeEventListener('resize', init);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BackgroundContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GradientOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedBackground, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c4 = AnimatedBackground;\nexport default AnimatedBackground;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"BackgroundContainer\");\n$RefreshReg$(_c2, \"GradientOverlay\");\n$RefreshReg$(_c3, \"Canvas\");\n$RefreshReg$(_c4, \"AnimatedBackground\");","map":{"version":3,"names":["React","useEffect","useRef","styled","keyframes","jsxDEV","_jsxDEV","gradientMove","BackgroundContainer","div","_c","GradientOverlay","_c2","Canvas","canvas","_c3","AnimatedBackground","_s","canvasRef","current","ctx","getContext","animationFrameId","particles","resizeCanvas","width","window","innerWidth","height","innerHeight","Particle","constructor","reset","x","Math","random","y","size","speedX","speedY","opacity","color","update","draw","beginPath","arc","PI","shadowColor","shadowBlur","fillStyle","fill","init","i","push","animate","clearRect","forEach","particle","index","j","length","dx","dy","distance","sqrt","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c4","$RefreshReg$"],"sources":["/Users/narimanaubakirov/Desktop/jigitcoin_web/src/components/AnimatedBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst gradientMove = keyframes`\n  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n`;\n\nconst BackgroundContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: -1;\n  overflow: hidden;\n  pointer-events: none;\n`;\n\nconst GradientOverlay = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background: linear-gradient(120deg, #1a1a40 0%, #2a2a88 50%, #FFD700 100%);\n  opacity: 0.35;\n  background-size: 200% 200%;\n  animation: ${gradientMove} 18s ease-in-out infinite;\n  z-index: 0;\n`;\n\nconst Canvas = styled.canvas`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: 1;\n`;\n\nconst AnimatedBackground = () => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    let particles = [];\n\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    class Particle {\n      constructor() {\n        this.reset();\n      }\n\n      reset() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.size = Math.random() * 3 + 1;\n        this.speedX = Math.random() * 1.5 - 0.75;\n        this.speedY = Math.random() * 1.5 - 0.75;\n        this.opacity = Math.random() * 0.5 + 0.2;\n        this.color = `rgba(255, 215, 0, ${this.opacity})`;\n      }\n\n      update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n        if (this.x > canvas.width || this.x < 0) this.speedX *= -1;\n        if (this.y > canvas.height || this.y < 0) this.speedY *= -1;\n      }\n\n      draw() {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.shadowColor = 'rgba(255,215,0,0.3)';\n        ctx.shadowBlur = 12;\n        ctx.fillStyle = this.color;\n        ctx.fill();\n        ctx.shadowBlur = 0;\n      }\n    }\n\n    const init = () => {\n      resizeCanvas();\n      particles = [];\n      for (let i = 0; i < 60; i++) {\n        particles.push(new Particle());\n      }\n    };\n\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Update and draw particles\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n\n      // Draw connecting lines\n      particles.forEach((particle, index) => {\n        for (let j = index + 1; j < particles.length; j++) {\n          const dx = particle.x - particles[j].x;\n          const dy = particle.y - particles[j].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < 120) {\n            ctx.beginPath();\n            ctx.strokeStyle = `rgba(255, 215, 0, ${0.07 * (1 - distance/120)})`;\n            ctx.lineWidth = 1;\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(particles[j].x, particles[j].y);\n            ctx.stroke();\n          }\n        }\n      });\n\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    init();\n    animate();\n    window.addEventListener('resize', init);\n    return () => {\n      window.removeEventListener('resize', init);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n\n  return (\n    <BackgroundContainer>\n      <GradientOverlay />\n      <Canvas ref={canvasRef} />\n    </BackgroundContainer>\n  );\n};\n\nexport default AnimatedBackground;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}